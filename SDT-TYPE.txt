PROGRAM1      ->	STATEMENT -> STATEMENT.table = new table;

STATEMENT     ->    VARDECL semicolumn -> VARDECL.table = STATEMENT.table;
STATEMENT     ->    IFSTAT      -> IFSTAT.table = STATEMENT.table;
STATEMENT     ->    FORSTAT     -> FORSTAT.table = STATEMENT.table;


VARDECL       -> TYPE ident VARDECL1   -> VARDECL.table.append((ident.name, TYPE.type))



IFSTAT              -> if lparen EXPRESSION rparen STATEMENT IFSTAT1 -> STATEMENT.table = new table;
IFSTAT1             -> else STATEMENT -> STATEMENT.table = new table;
FORSTAT             -> for lparen ATRIBSTAT semicolumn EXPRESSION semicolumn ATRIBSTAT rparen STATEMENT -> STATEMENT.table = new table



PROGRAM1      ->    FUNCLIST 
FUNCLIST      ->    FUNCDEF FUNCLIST1
FUNCDEF       -> 	def ident lparen PARAMLIST rparen lbrace STATELIST rbrace -> FUNCDEF.table = new table, PARAMLIST.table = FUNCDEF.table, STATELIST.table = FUNCDEF.table
STATELIST           -> STATEMENT STATELIST1 -> STATEMENT.table = STATELIST.table
PARAMLIST           -> PARAMLIST1 -> PARAMLIST1.table = PARAMLIST.table 
PARAMLIST1          -> TYPE ident -> PARAMLIST1.table.append((ident.name, TYPE.type))




TYPE          -> int -> TYPE.type = int;
TYPE          -> float -> TYPE.type = float;
TYPE          -> string -> TYPE.type = float;






