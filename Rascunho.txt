PROGRAM             -> PROGRAM1 | &
PROGRAM1            -> STATEMENT | FUNCLIST
FUNCLIST            -> FUNCDEF FUNCLIST1
FUNCLIST1           -> FUNCLIST | &
FUNCDEF             -> def ident lparen PARAMLIST rparen lbrace STATELIST rbrace
PARAMLIST           -> PARAMLIST1 | &
PARAMLIST1          -> TYPE PARAMLIST2
PARAMLIST2          -> ident PARAMLIST3
PARAMLIST3          -> comma PARAMLIST | &
STATEMENT           -> VARDECL semicolumn | ATRIBSTAT semicolumn | PRINTSTAT semicolumn | READSTAT semicolumn | RETURNSTAT semicolumn | IFSTAT | FORSTAT | lbrace STATELIST rbrace | break semicolumn | semicolumn
VARDECL             -> TYPE ident VARDECL1
VARDECL1            -> lbracket int_constant rbracket VARDECL1 | &
ATRIBSTAT           -> ident LVALUE assign ATRIBSTAT1
ATRIBSTAT1          -> ATRIBSTAT2 | ident ATRIBSTAT3
ATRIBSTAT2          -> UNARYEXPR ident LVALUE EXPRESSION | FACTOR EXPRESSION | ALLOCEXPRESSION 
ATRIBSTAT3          -> LVALUE EXPRESSION | FUNCCALL
FUNCCALL            -> lparen PARAMLISTCALL rparen
PARAMLISTCALL       -> PARAMLISTCALL1 | &
PARAMLISTCALL1      -> ident PARAMLISTCALL2
PARAMLISTCALL2      -> comma PARAMLISTCALL | &
PRINTSTAT           -> print PRINTSTAT1
PRINTSTAT1          -> UNARYEXPR PRINTSTAT2
PRINTSTAT2          -> ident LVALUE EXPRESSION | FACTOR EXPRESSION
READSTAT            -> read ident LVALUE
RETURNSTAT          -> return
IFSTAT              -> if lparen IFSTAT1
IFSTAT1             -> UNARYEXPR IFSTAT2
IFSTAT2             -> ident LVALUE EXPRESSION rparen STATEMENT | FACTOR EXPRESSION rparen STATEMENT
FORSTAT             -> for lparen ATRIBSTAT semicolumn FORSTAT1
FORSTAT1            -> UNARYEXPR FORSTAT2
FORSTAT2            -> ident LVALUE EXPRESSION semicolumn ATRIBSTAT rparen STATEMENT | FACTOR EXPRESSION semicolumn ATRIBSTAT rparen STATEMENT
STATELIST           -> STATEMENT STATELIST1
STATELIST1          -> STATELIST | &
ALLOCEXPRESSION     -> new TYPE ALLOCEXPRESSION1
ALLOCEXPRESSION1    -> lbracket ALLOCEXPRESSION2
ALLOCEXPRESSION2    -> UNARYEXPR ALLOCEXPRESSION5
ALLOCEXPRESSION3    -> rbracket ALLOCEXPRESSION4
ALLOCEXPRESSION4    -> ALLOCEXPRESSION1 | &
ALLOCEXPRESSION5    -> ident LVALUE NUMEXPRESSION ALLOCEXPRESSION3 | FACTOR NUMEXPRESSION ALLOCEXPRESSION3
EXPRESSION          -> NUMEXPRESSION EXPRESSION1
EXPRESSION1         -> EXPRESSION2 | &
EXPRESSION2         -> EXPRESSION3 UNARYEXPR EXPRESSION4
EXPRESSION3         -> less | greater | lessequal | greaterequal | equal | diff
EXPRESSION4         -> ident LVALUE NUMEXPRESSION | FACTOR NUMEXPRESSION
NUMEXPRESSION       -> UNARYEXPR TERM3 NUMEXPRESSION1
NUMEXPRESSION1      -> NUMEXPRESSION2 UNARYEXPR NUMEXPRESSION3 | &
NUMEXPRESSION2      -> plus | minus
NUMEXPRESSION3      -> ident LVALUE TERM1 NUMEXPRESSION1 | FACTOR TERM1 NUMEXPRESSION1
TERM1               -> TERM2 UNARYEXPR TERM3 | &
TERM2               -> times | divide | mod
TERM3               -> ident LVALUE TERM1 | FACTOR TERM1
UNARYEXPR           -> plus | minus | &
FACTOR              -> int_constant | float_constant | string_constant | null  | lparen NUMEXPRESSION rparen
LVALUE              -> LVALUE2 | lparen PARAMLISTCALL rparen
LVALUE2             -> lbracket NUMEXPRESSION rbracket LVALUE2 | &
TYPE                -> int | float | string