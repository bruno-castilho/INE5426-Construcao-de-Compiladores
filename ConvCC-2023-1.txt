PROGRAM             -> PROGRAM1 | &
PROGRAM1            -> STATEMENT | FUNCLIST
FUNCLIST            -> FUNCDEF FUNCLIST1
FUNCLIST1           -> FUNCLIST | &
FUNCDEF             -> def ident lparen PARAMLIST rparen lbrace STATELIST rbrace
PARAMLIST           -> PARAMLIST1 | &
PARAMLIST1          -> TYPE ident PARAMLIST2
PARAMLIST2          -> comma PARAMLIST | &
STATEMENT           -> VARDECL semicolumn | ATRIBSTAT semicolumn | PRINTSTAT semicolumn | READSTAT semicolumn | RETURNSTAT semicolumn | IFSTAT | FORSTAT | lbrace STATELIST rbrace | break semicolumn | semicolumn
VARDECL             -> TYPE ident VARDECL1
VARDECL1            -> lbracket int_constant rbracket VARDECL1 | &
ATRIBSTAT           -> ident LVALUE assign ATRIBSTAT1
ATRIBSTAT1          -> ATRIBSTAT2 | ALLOCEXPRESSION | ident ATRIBSTAT4 | FACTOR TERM NUMEXPRESSION EXPRESSION1
ATRIBSTAT2          -> plus ATRIBSTAT3 | minus ATRIBSTAT3
ATRIBSTAT3          -> FACTOR TERM NUMEXPRESSION EXPRESSION1 | ident LVALUE TERM NUMEXPRESSION EXPRESSION1 
ATRIBSTAT4          -> FUNCCALL | LVALUE TERM NUMEXPRESSION EXPRESSION1 
FUNCCALL            -> lparen PARAMLISTCALL rparen
PARAMLISTCALL       -> PARAMLISTCALL1 | &
PARAMLISTCALL1      -> ident PARAMLISTCALL2
PARAMLISTCALL2      -> comma PARAMLISTCALL | &
PRINTSTAT           -> print UNARYEXPR PRINTSTAT1
PRINTSTAT1          -> FACTOR TERM NUMEXPRESSION EXPRESSION1 | ident LVALUE TERM NUMEXPRESSION EXPRESSION1
READSTAT            -> read ident LVALUE
RETURNSTAT          -> return
IFSTAT              -> if lparen IFSTAT1
IFSTAT1             -> UNARYEXPR IFSTAT2
IFSTAT2             -> FACTOR TERM NUMEXPRESSION EXPRESSION1 rparen lbrace STATELIST rbrace ELSE | ident LVALUE TERM NUMEXPRESSION EXPRESSION1 rparen lbrace STATELIST rbrace ELSE
ELSE                -> else  | &
ELSE1               -> lbrace STATELIST rbrace | STATELIST
FORSTAT             -> for lparen ATRIBSTAT semicolumn FORSTAT1
FORSTAT1            -> UNARYEXPR FORSTAT2
FORSTAT2            -> FACTOR TERM NUMEXPRESSION EXPRESSION1 semicolumn ATRIBSTAT rparen STATEMENT | ident LVALUE TERM NUMEXPRESSION EXPRESSION1 semicolumn ATRIBSTAT rparen STATEMENT
STATELIST           -> STATEMENT STATELIST1
STATELIST1          -> STATELIST | &
ALLOCEXPRESSION     -> new TYPE ALLOCEXPRESSION1
ALLOCEXPRESSION1    -> lbracket UNARYEXPR ALLOCEXPRESSION2
ALLOCEXPRESSION2    -> FACTOR TERM NUMEXPRESSION rbracket ALLOCEXPRESSION3 | ident LVALUE TERM NUMEXPRESSION rbracket ALLOCEXPRESSION3
ALLOCEXPRESSION3    -> lbracket UNARYEXPR ALLOCEXPRESSION2 | &
EXPRESSION1         -> EXPRESSION2 | &
EXPRESSION2         -> EXPRESSION3 UNARYEXPR EXPRESSION4
EXPRESSION3         -> less | greater | lessequal | greaterequal | equal | diff
EXPRESSION4         -> FACTOR TERM NUMEXPRESSION | ident LVALUE TERM NUMEXPRESSION
NUMEXPRESSION       -> NUMEXPRESSION2 UNARYEXPR NUMEXPRESSION1 | &
NUMEXPRESSION1      -> FACTOR TERM NUMEXPRESSION | ident LVALUE TERM NUMEXPRESSION 
NUMEXPRESSION2      -> plus | minus
TERM                -> TERM2 UNARYEXPR TERM1 | TERM2 UNARYEXPR TERM1 | &
TERM1               -> FACTOR TERM | ident LVALUE TERM
TERM2               -> times | divide | mod
UNARYEXPR           -> & | plus | minus
FACTOR              -> int_constant | float_constant | string_constant | null | lparen NUMEXPRESSION rparen
LVALUE              -> lbracket LVALUE1 | &
LVALUE1             -> FACTOR TERM NUMEXPRESSION rbracket LVALUE | ident LVALUE TERM NUMEXPRESSION rbracket LVALUE
TYPE                -> int | float | string